// C code generated from an object model
// Application name: sevenseg

#include <avr/io.h>
#include <util/delay.h>
#include <Arduino.h>
#include <fsm.h>

int count = 0;
unsigned long seven_seg_last_updated = 0;
int pin_1 = 1;
int pin_2 = 2;
int pin_3 = 3;
int pin_4 = 4;
int pin_5 = 5;
int pin_6 = 6;
int pin_7 = 7;
int SEVENSEG_PROP1 = 8;
int SEVENSEG_PROP2 = 9;
void setup(){
  pinMode(pin_1, OUTPUT); // pin_1 [Actuator]
  pinMode(pin_2, OUTPUT); // pin_2 [Actuator]
  pinMode(pin_3, OUTPUT); // pin_3 [Actuator]
  pinMode(pin_4, OUTPUT); // pin_4 [Actuator]
  pinMode(pin_5, OUTPUT); // pin_5 [Actuator]
  pinMode(pin_6, OUTPUT); // pin_6 [Actuator]
  pinMode(pin_7, OUTPUT); // pin_7 [Actuator]
  pinMode(SEVENSEG_PROP1, OUTPUT); // SEVENSEG_PROP1 [Actuator]
  pinMode(SEVENSEG_PROP2, OUTPUT); // SEVENSEG_PROP2 [Actuator]
  sevenseg_state_machine = &sevenseg_state_initialising;
}

void do_event(int eventTrigger)
{
  sevenseg_state_machine(eventTrigger);
}

void sevenseg_state_initialising(int eventTrigger) {
  digitalWrite(SEVENSEG_PROP1,LOW);
  digitalWrite(SEVENSEG_PROP2,HIGH);
  if(eventTrigger == NULL_EVENT) {
    sevenseg_state_machine = &sevenseg_state_counting;
  }
}
void sevenseg_state_counting(int eventTrigger) {
switch(count) { 

case 0: 
  digitalWrite(pin_1,HIGH);
break;
case 1: 
  digitalWrite(pin_1,LOW);
break;
case 2: 
  digitalWrite(pin_1,HIGH);
break;
case 3: 
  digitalWrite(pin_1,HIGH);
break;
case 4: 
  digitalWrite(pin_1,LOW);
break;
case 5: 
  digitalWrite(pin_1,HIGH);
break;
case 6: 
  digitalWrite(pin_1,HIGH);
break;
case 7: 
  digitalWrite(pin_1,HIGH);
break;
case 8: 
  digitalWrite(pin_1,HIGH);
break;
case 9: 
  digitalWrite(pin_1,HIGH);
break;
}
switch(count) { 

case 0: 
  digitalWrite(pin_2,HIGH);
break;
case 1: 
  digitalWrite(pin_2,HIGH);
break;
case 2: 
  digitalWrite(pin_2,HIGH);
break;
case 3: 
  digitalWrite(pin_2,HIGH);
break;
case 4: 
  digitalWrite(pin_2,HIGH);
break;
case 5: 
  digitalWrite(pin_2,LOW);
break;
case 6: 
  digitalWrite(pin_2,LOW);
break;
case 7: 
  digitalWrite(pin_2,HIGH);
break;
case 8: 
  digitalWrite(pin_2,HIGH);
break;
case 9: 
  digitalWrite(pin_2,HIGH);
break;
}
switch(count) { 

case 0: 
  digitalWrite(pin_3,HIGH);
break;
case 1: 
  digitalWrite(pin_3,HIGH);
break;
case 2: 
  digitalWrite(pin_3,LOW);
break;
case 3: 
  digitalWrite(pin_3,HIGH);
break;
case 4: 
  digitalWrite(pin_3,HIGH);
break;
case 5: 
  digitalWrite(pin_3,HIGH);
break;
case 6: 
  digitalWrite(pin_3,HIGH);
break;
case 7: 
  digitalWrite(pin_3,HIGH);
break;
case 8: 
  digitalWrite(pin_3,HIGH);
break;
case 9: 
  digitalWrite(pin_3,HIGH);
break;
}
switch(count) { 

case 0: 
  digitalWrite(pin_4,HIGH);
break;
case 1: 
  digitalWrite(pin_4,LOW);
break;
case 2: 
  digitalWrite(pin_4,HIGH);
break;
case 3: 
  digitalWrite(pin_4,HIGH);
break;
case 4: 
  digitalWrite(pin_4,LOW);
break;
case 5: 
  digitalWrite(pin_4,HIGH);
break;
case 6: 
  digitalWrite(pin_4,HIGH);
break;
case 7: 
  digitalWrite(pin_4,LOW);
break;
case 8: 
  digitalWrite(pin_4,HIGH);
break;
case 9: 
  digitalWrite(pin_4,LOW);
break;
}
switch(count) { 

case 0: 
  digitalWrite(pin_5,HIGH);
break;
case 1: 
  digitalWrite(pin_5,LOW);
break;
case 2: 
  digitalWrite(pin_5,HIGH);
break;
case 3: 
  digitalWrite(pin_5,LOW);
break;
case 4: 
  digitalWrite(pin_5,LOW);
break;
case 5: 
  digitalWrite(pin_5,LOW);
break;
case 6: 
  digitalWrite(pin_5,HIGH);
break;
case 7: 
  digitalWrite(pin_5,LOW);
break;
case 8: 
  digitalWrite(pin_5,HIGH);
break;
case 9: 
  digitalWrite(pin_5,HIGH);
break;
}
switch(count) { 

case 0: 
  digitalWrite(pin_6,HIGH);
break;
case 1: 
  digitalWrite(pin_6,LOW);
break;
case 2: 
  digitalWrite(pin_6,LOW);
break;
case 3: 
  digitalWrite(pin_6,LOW);
break;
case 4: 
  digitalWrite(pin_6,HIGH);
break;
case 5: 
  digitalWrite(pin_6,HIGH);
break;
case 6: 
  digitalWrite(pin_6,HIGH);
break;
case 7: 
  digitalWrite(pin_6,LOW);
break;
case 8: 
  digitalWrite(pin_6,HIGH);
break;
case 9: 
  digitalWrite(pin_6,HIGH);
break;
}
switch(count) { 

case 0: 
  digitalWrite(pin_7,LOW);
break;
case 1: 
  digitalWrite(pin_7,LOW);
break;
case 2: 
  digitalWrite(pin_7,HIGH);
break;
case 3: 
  digitalWrite(pin_7,HIGH);
break;
case 4: 
  digitalWrite(pin_7,HIGH);
break;
case 5: 
  digitalWrite(pin_7,HIGH);
break;
case 6: 
  digitalWrite(pin_7,HIGH);
break;
case 7: 
  digitalWrite(pin_7,LOW);
break;
case 8: 
  digitalWrite(pin_7,HIGH);
break;
case 9: 
  digitalWrite(pin_7,HIGH);
break;
}
if (millis() - seven_seg_last_updated > 1000UL) {
seven_seg_last_updated = millis();
  digitalWrite(pin_1,HIGH);
}
}
void loop(void) {
 while(1) {
    do_event(NULL_EVENT);
  }
}

int main(void) {
  setup();
  loop();
  return 0;
}